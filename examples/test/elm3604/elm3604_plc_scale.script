##############################################################################
## Example config for el3604
## Oversampling factor can be set by the changing the "NELM" arg to addSlave
## This test script uses the +-320mV sensor configuration.
## Scaling to engineering units are made in by plc:s and the result is 
## exposed to epics through data storages.
## The scaled data can be retrived in the data storage PVs: 
## IOC_TEST:ds<dsId>-Data-Act  (dsId 0..3)
##

##############################################################################
## Initiation:
epicsEnvSet("IOC" ,"$(IOC="IOC_TEST")")
epicsEnvSet("ECMCCFG_INIT" ,"")  #Only run startup once (auto at PSI, need call at ESS), variable set to "#" in startup.cmd
epicsEnvSet("SCRIPTEXEC" ,"$(SCRIPTEXEC="iocshLoad")")

require ecmccfg develop

# run module startup.cmd (only needed at ESS  PSI auto call at require)
$(ECMCCFG_INIT)$(SCRIPTEXEC) ${ecmccfg_DIR}startup.cmd, "IOC=$(IOC),ECMC_VER=develop, EC_RATE=500"

##############################################################################
## Config hardware:

epicsEnvSet("ECMC_EC_SLAVE_NUM",              "0")
${SCRIPTEXEC} ${ecmccfg_DIR}addSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=EK1100"

# Update records in 1ms (all data to EPICS in 500Hz)
epicsEnvSet(ECMC_SAMPLE_RATE_MS,2)

# Note NELM equals oversampling factor in this case. Use +-320mv Config file for all 4 channels
epicsEnvSet("NELM",              "40")
epicsEnvSet("ECMC_EC_SLAVE_NUM",              "11")
${SCRIPTEXEC} ${ecmccfg_DIR}configureSlave.cmd, "SLAVE_ID=$(ECMC_EC_SLAVE_NUM), HW_DESC=ELM3604, NELM=${NELM=20}, CONFIG=-Sensor_+-320mV"

# Update records in 10ms (for all records loaded below)
epicsEnvSet(ECMC_SAMPLE_RATE_MS,10)

#Apply hardware configuration
ecmcConfigOrDie "Cfg.EcApplyConfig(1)"

##############################################################################
## Data Storage 0
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=0, DS_SIZE=${NELM=20}, SAMPLE_RATE_MS=-1, DS_TYPE=2")

##############################################################################
## Data Storage 1
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=1, DS_SIZE=${NELM=20}, SAMPLE_RATE_MS=-1, DS_TYPE=2")

##############################################################################
## Data Storage 2
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=2, DS_SIZE=${NELM=20}, SAMPLE_RATE_MS=-1, DS_TYPE=2")

##############################################################################
## Data Storage 3
$(SCRIPTEXEC) $(ecmccfg_DIR)addDataStorage.cmd "DS_ID=3, DS_SIZE=${NELM=20}, SAMPLE_RATE_MS=-1, DS_TYPE=2")

##############################################################################
## Prepare PLC macros (check MM index and calc scale and offset):
ecmcConfig "EcGetMemMapId(ec0.s11.mm.CH1_ARRAY)"
epicsEnvSet(MM_CH_1,${ECMC_CONFIG_RETURN_VAL})
ecmcConfig "EcGetMemMapId(ec0.s11.mm.CH2_ARRAY)"
epicsEnvSet(MM_CH_2,${ECMC_CONFIG_RETURN_VAL})
ecmcConfig "EcGetMemMapId(ec0.s11.mm.CH3_ARRAY)"
epicsEnvSet(MM_CH_3,${ECMC_CONFIG_RETURN_VAL})
ecmcConfig "EcGetMemMapId(ec0.s11.mm.CH4_ARRAY)"
epicsEnvSet(MM_CH_4,${ECMC_CONFIG_RETURN_VAL})

# 24bit full range corresponds to +-343.600mV
ecmcEpicsEnvSetCalc(SCALE, "343.6/2^23;",%.10lf)
epicsEnvSet(OFFSET,0)

##############################################################################
## PLC 0
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=0, SAMPLE_RATE_MS=-1,FILE=./plc/moveData.plc, PLC_MACROS='PLC_ID=0,DS_ID=0,MM_ID=${MM_CH_1},SCALE=${SCALE},OFFSET=${OFFSET}'")

##############################################################################
## PLC 1
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=1, SAMPLE_RATE_MS=-1,FILE=./plc/moveData.plc, PLC_MACROS='PLC_ID=1,DS_ID=1,MM_ID=${MM_CH_2},SCALE=${SCALE},OFFSET=${OFFSET}'")

##############################################################################
## PLC 2
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=2, SAMPLE_RATE_MS=-1,FILE=./plc/moveData.plc, PLC_MACROS='PLC_ID=2,DS_ID=2,MM_ID=${MM_CH_3},SCALE=${SCALE},OFFSET=${OFFSET}'")

##############################################################################
## PLC 3
$(SCRIPTEXEC) $(ecmccfg_DIR)loadPLCFile.cmd, "PLC_ID=3, SAMPLE_RATE_MS=-1,FILE=./plc/moveData.plc, PLC_MACROS='PLC_ID=3,DS_ID=3,MM_ID=${MM_CH_4},SCALE=${SCALE},OFFSET=${OFFSET}'")

##############################################################################
## Configure diagnostics:

ecmcConfigOrDie "Cfg.EcSetDiagnostics(1)"
ecmcConfigOrDie "Cfg.EcEnablePrintouts(0)"
ecmcConfigOrDie "Cfg.EcSetDomainFailedCyclesLimit(100)"

ecmcGrepParam *ds0*

##############################################################################
## Go active:
$(SCRIPTEXEC) ($(ecmccfg_DIR)setAppMode.cmd)
iocInit()

dbl > pvs.log
